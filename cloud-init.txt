#cloud-config
package_upgrade: true
packages:
  - nginx
  - htop
  - curl
  - wget
  - git
  - unzip
  - fail2ban
  - ufw

# Configurar usuario (las claves SSH se manejan por Terraform)
users:
  - name: ${admin_username}
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys: []  # Las claves se configuran automáticamente por Terraform

# Deshabilitar autenticación por contraseña para mayor seguridad
ssh_pwauth: false

# Configurar firewall y servicios
runcmd:
  # Configurar UFW (firewall)
  - ufw allow ssh
  - ufw allow http
  - ufw allow https
  - ufw --force enable
  
  # Configurar fail2ban para protección SSH
  - systemctl enable fail2ban
  - systemctl start fail2ban
  
  # Configurar Nginx
  - systemctl enable nginx
  - systemctl start nginx
  - echo "<h1>¡VM de Terraform funcionando con SSH Keys!</h1><p>🔐 Autenticación SSH segura activada</p><p>🌐 IP Pública: $(curl -s http://checkip.amazonaws.com)</p><p>📅 Fecha de despliegue: $(date)</p><p>👤 Usuario: ${admin_username}</p><p>🏷️ VM gestionada por Terraform con módulos</p>" > /var/www/html/index.html
  
  # Configurar SSH para mayor seguridad
  - sed -i 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
  - systemctl restart sshd
  
  # Configurar fail2ban para SSH
  - cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
  - systemctl restart fail2ban

final_message: "✅ VM configurada correctamente con autenticación SSH. Usuario: ${admin_username}"
